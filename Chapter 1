# packages

library(ape)
library(vegan)
library(riverdist)
library(raster)
library(SYNCSA)
library(adespatial)

# objects

coord # object “data.frame” equal to geographical coordinates, column 1=Longitude, column 2=Latitude

phygen # object “phylo” equal to phylogenetic tree of the genera pool

comgenabun # object “data.frame” equal to abundance data, rows=sites, columns=genera

comspeabun # object “data.frame” equal to abundance data, rows=sites, columns=species

dist.riv # object “data.frame” equal to distance between rivers pairwise, rows=195 sites, column=195 sites

## calculating the distance between sites
# importing the shape of the Amazon basin

B<-line2network(path="amzriverproje",layer="amzriverproje") # "amzriverproje.shp" is a lines layer

# Cleanup of the river network B 

C<-cleanup(B)
y $disolve?
y $insert points
100 $ minimum distance to use
171 $ segment number of river mouth
240 $ vertex number of river mouth
y $ accept mouth assignement
r $ remove region 1
r $ remove region 2
r $ remove region 3
r $ remove region 4
n $ not remove any additional segments?
  y $ build segment routes?

cord.dec <- SpatialPoints(cbind(coord$Longitude, coord$Latitude), proj4string=CRS("+proj=longlat"))
cord.UTM <- spTransform(cord.dec, CRS("+init=epsg:32718"))

coordriv<-xy2segvert(x=cord.UTM$coords.x1,y=cord.UTM$coords.x2,rivers=C)

# distance between the sites considering the watercourse

dist.riv<-riverdistancemat(seg=coordriv$seg, vert=coordriv$vert, rivers=C,stopiferror=TRUE,
                            algorithm="Dijkstra")

# changing the incorrect zero distances to geographic distance

copyc<-dist.riv
distO<-as.matrix(dist(coord,diag=T,upper=T))
zeros<-which(copy==0,arr.ind=T)

for(i in 1:nrow(zeros)){
copyc[zeros[i,1],zeros[i,2]]<-distO[zeros[i,1],zeros[i,2]]*111325
}

# importing slope

slp<-raster("slope_1KMmn_SRTM.tif")
slope<-extract(slp,coord)

# importing elevation 

elevation<-raster("PER_alt.gri")
elev<-extract(elevation,coord)

# importing precipitacion (BIO 12), Temperature Annual Range (BIO 7) and precipitation range (BIO 13 - BIO 14)

rasterBIO<-getData("worldclim",var="bio",res=0.5,lon=c(-77.8,-70.5),lat=c(-7.3,-0.1))

var<-extract(rasterBIO,coord)

var1<-var[,c(7,12,13,14)]
var2<-cbind(var1[,2],var[,1],var[,3]-var[,4])
amb<-cbind(var2,slope,elev)

# writing subsets of Rabosky's trees for genera

library(ape)
library(stringr)
library(dispRity)
library(RRphylo)

# lack object detect which genera of our genera pool are not in the 
# Rabosky's tree, in our case, Paratrygon and Potamotrygon
lack<-as.list(NA) 

for(j in 1:100){ # 100 Rabosky's trees
  
  #We used the original name from Rabosky et al (2018)
  tree<-read.tree(file=paste(j,"newick.tre",sep="."))
  
  c<-rep(NA,length(tree$tip.label))
  
  for(i in 1:length(rownames(comgenabun))){
    c[which(str_detect(tree$tip.label,paste(rownames(comgenabun)[i],
    "_",sep="")))]<-rep(i,sum(str_detect(tree$tip.label,
    paste(rownames(comgenabun)[i], "_",sep=""))))
  }
  
  d<-unique(c)[!is.na(unique(c))]
  lack[[j]]<-setdiff(1:length(rownames(comgenabun)),d)
  
  for(k in 1:length(rownames(comgenabun))){
    if(sum(c[!is.na(c)]==k)>0){
      tree$tip.label[min(which(c==k))]<-rownames(comgenabun)[k]
    }
  }
  
  tree<-keep.tip(tree,rownames(comgenabun)[-lack[[j]]])
  
  T<-473-tree.age(tree,order="present")[1,1]
  treetext<-substr(write.tree(tree),1,nchar(write.tree(tree))-1)
  
  #adding Paratrygon and Potamotrygon
  tree<-read.tree(text=paste("((Paratrygon:236.5,Potamotrygon:236.5):236.5,",
                             treetext,":",T,");"))
  
  write.tree(tree,file=paste("newicktre",j,".txt",sep=""))
  
}

# writing subsets of Rabosky's trees for species

library(ape)
library(stringr)
library(dispRity)
library(RRphylo)

# lack object detect which species of our species pool are 
# not in the Rabosky's tree (we also tried to detect congeners instead of 
# exactly the same species names), in our case, Paratrygon aiereba, 
# Potamotrygon motoro and Potamotrygon orbignyi
lack<-as.list(NA)

for(j in 1:100){ # 100 trees
  
  tree<-read.tree(file=paste(j,"newick.tre",sep="."))
  # "edge"        "edge.length" "Nnode"       "tip.label" 
  
  c<-rep(0,length(tree$tip.label))
  e<-rep(0,length(rownames(comspeabun)))
  for(i in 1:length(rownames(comspeabun))){
    if(sum(tree$tip.label==rownames(comspeabun)[i])>0){
      c[which(tree$tip.label==rownames(comspeabun)[i])]<-i
    } else {
      e[i]<-1
    }
    
  }
  
  for(k in which(e==1)){
    gen<-paste(str_split(rownames(comspeabun)[k],"_")[[1]][1],"_",sep="")
    if(sum(str_detect(tree$tip.label,gen))==0){
      e[k]<-1
    } else {
      if( sum(c[which(str_detect(tree$tip.label,gen))]==0)>0 ){
        ind<-min(which(c[which(str_detect(tree$tip.label,gen))]==0))
        c[which(str_detect(tree$tip.label,gen))[ind]]<-k
        tree$tip.label[which(str_detect(tree$tip.label,gen))[ind]]<-
          rownames(comspeabun)[k]
        e[k]<-0
      } else {
        e[k]<-1
      }
    }
  }
  
  d<-unique(c)[0!=unique(c)]
  lack[[j]]<-setdiff(1:length(rownames(comspeabun)),d)
  
  tree<-keep.tip(tree,rownames(comspeabun)[-lack[[j]]])
  
  treetext<-substr(write.tree(tree),1,nchar(write.tree(tree))-1)
  T<-473-tree.age(tree,order="present")[1,1]
  
  #adding aratrygon aiereba, Potamotrygon motoro and Potamotrygon orbignyi
  tree<-read.tree(text=paste("((Paratrygon_aiereba:236.5,(Potamotrygon_motoro:
        118.25,Potamotrygon_orbignyi:118.25):118.25):236.5,",
        treetext,":",T,");"))
  
  write.tree(tree,file=paste("newicktres",j,".txt",sep=""))
  
}

# pre analysis

abuH<-decostand(comgenabun,"hellinger")

#comgen = object “data.frame” equal to prescence/absence data, rows=sites, columns=genera
comgen<-comgenabun
comgen[comgen>0]<-1

# calculating the phylogenetic eigenvectors

p<-matrix.p(comgen,cophenetic(phygen))$matrix.P
distphy<-sqrt(vegdist(p,method="bray"))
pcoaf<-pcoa(distphy)				
pcoafg<-pcoaf$vectors[,1:173] # 173 positives eigenvalues

rdaf<-rda(abuH ~ pcoafg)
r2adjf<-RsquareAdj(rdaf)$adj.r.squared
self<-forward.sel(abuH,pcoafg,adjR2thresh=r2adjf)
pcnmSelf<-pcoafg[,self[,2]]

# calculating the spatial eigenvectors

pcnmd<-pcnm(copyc)$vectors
rdad<-rda(abuH~pcnmd)
r2adjd<-RsquareAdj(rdad)$adj.r.squared
seld<-forward.sel(abuH,pcnmd,adjR2thresh=r2adjd)
pcnmSeld<-pcnmd[,seld[,2]]

## varpart

# amb1 = slope, elevation and 3 climatic variables

# 3 climatics, slope and elevation

rdaalltree1<-matrix(rep(NA,800),ncol=8,nrow=100)
for(j in 1:100){
rdafinal<-varpart(abugH,pcnmSeld,listpcnmf[[j]],var3) 
rdaalltree1[j,]<-rdafinal$part$indfract[,3]
}

summary(rdaalltree1*100)

boxplot(100*rdaalltree1[,c(1,3)])
t.test(rdaalltree1[,1],rdaalltree1[,3],paired=T,alternative="greater")


#amb2 = 18 climatics, slope and elevation

var4<-cbind(var[,-1],slope,elev)

rda2<-rda(abugH~var4)
r2adj<-RsquareAdj(rda2)$adj.r.squared
fselamb<-forward.sel(abugH,var4,adjR2thresh = r2adj)
var5<-var4[,fselamb[,2]]

rdaalltree2<-matrix(rep(NA,800),ncol=8,nrow=100)
for(k in 1:100){
rdafinal<-varpart(abugH,pcnmSeld,listpcnmf[[k]],var5)
rdaalltree2[k,]<-rdafinal$part$indfract[,3]
}

summary(100*rdaalltree2)
boxplot(100*rdaalltree2[,c(1,3)])
t.test(rdaalltree2[,1],rdaalltree2[,3],paired=T,alternative="greater")

############ END
